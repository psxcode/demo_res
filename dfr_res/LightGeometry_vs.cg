/** Deferred shading framework
	// W.J. :wumpus: van der Laan 2005 //
	
	Post shader: Light geometry material
*/

void main(
	float4 Pos: POSITION,
	
	out float4 oPos: POSITION,
	out float4 oTexCoord : TEXCOORD0,
	
	uniform float4x4 worldViewProj
	)
{
	float4 projPos = mul(worldViewProj, Pos);
	oTexCoord = projPos;
	
	oPos = projPos;

	// projPos is now in nonhomogeneous 2d space -- this makes sure no perspective interpolation is
	// done that could mess with our concept.
	//projPos = projPos/projPos.w;
	//oRay = float3(projPos.x, projPos.y * flip, 1) * farCorner;

	
	// -1 is because generally +Y is down for textures but up for the screen
    //float2 uv = float2(projPos.x, projPos.y * -1) * 0.5 + 0.5;

	// Texture coordinate magic, this compensates for jitter
	//float2 texCoord = float2(projPos[0]/2+0.5, -projPos[1]/2+0.5);
	//oTexCoord = fixUV(uv, float2(vpWidth, vpHeight));
}
